import optparse
import socket
import threading


screenLock = Semaphore(value = 1)
def connScan(tgtHost, tgtPort):
	try:
		connSkt = scoket(AF_INET, SOCK_STREAM)
		connSkt = connect((tgtHost,tgtPort))
		connSkt.send("ViolentPython\r\n")
		output = connSkt.recv(1024)
		screenLock.acquire()
		print "[+] " + tgtPort + "/tcp open"
		print "[+] " + str(output)

	except:
		screenLock.acquire()
		print ("[-] ", tgtPort, " tcp closed")
	finally:
		screenLock.release()
		connSkt.close()

def portScan(tgtHost, tgtPorts):
	try:
		tgtIP = socket.gethostbyname(tgtHost)
	except:
		print "[-] Cannot resolve " + tgtHost + ": Unknown host"
		return

	try:
		tgtName = socket.gethostbyaddr(tgtIP)
		print "[+] Scan Results for: " + tgtName[0]
	except:
		print "[+] Scan Results for: " + tgtIP

	socket.setdefaulttimeout(1)

	for tgtPort in tgtPorts:
		t = threading.Thread(target=connScan, args=(tgtHost, int(tgtPort)))
		t.start()

def main():
	parser = optparse.OptionParser("usage %prog -H <target host> -p <target port>")
	parser.add_option('-H', dest='tgtHost', type='string', help='Specify target host')
	parser.add_option('-p', dest='tgtPort', type='string', help='Specify target port[s] separated by comma')
	(options, args) = parser.parse_args()
	tgtHost = options.tgtHost
	tgtPorts = str(options.tgtPort).split(',')
	print tgtPorts
	if (tgtHost == None) | (tgtPorts[0] == None):
		print parser.usage
		exit(0)
	portScan(tgtHost, tgtPorts)

if __name__ == '__main__':
	main()
