import os
import sys
import hashlib
import base64
import string
import random
import getpass
from Crypto import Random
from Crypto.Cipher import AES

def pad(s):
    return s + b"\0" * (AES.block_size - len(s) % AES.block_size)

def encrypt_file(key, passwd_list):
    message = ""
    if passwd_list:
        for passwd in passwd_list:
            message += passwd + '\n'

    message = pad(message)
    iv = Random.new().read(AES.block_size)
    cipher = AES.new(key, AES.MODE_CBC, iv)
    ciphertext = iv + cipher.encrypt(message)
    with open('passwd_file', 'w') as f:
        f.write(ciphertext)

def decrypt_file(key):
    file = open('passwd_file', 'r')
    ciphertext = file.read()
    iv = ciphertext[:AES.block_size]
    cipher = AES.new(key, AES.MODE_CBC, iv)
    plaintext = cipher.decrypt(ciphertext[AES.block_size:])
    plaintext = plaintext.rstrip(b"\0")
    temp_list = plaintext.split('\n')

    passwd_list = []
    for passwd in temp_list:
        if passwd != "":
            passwd_list.append(passwd)

    return passwd_list

def generate_password():
    random_string = ''.join([random.choice(string.ascii_letters + string.digits) for n in xrange(32)])
    hash = hashlib.sha256(random_string).hexdigest()
    return base64.b64encode(hash)

def new_user():
    print "Welcome to the Password Manager!"

    while True:
        passwd = getpass.getpass()
        print "Reenter Password:"
        passwd_check = getpass.getpass()
        if passwd != passwd_check:
            print '[-] Passwords do not match! Please reenter you password.'
            continue
        else:
            break

    hash = hashlib.sha256(passwd).hexdigest()
    passwd_list = [hash]
    encrypt_file(hash[:32], passwd_list)
    print '[+] Password created!'
    return hash

def add_password(password_list):
    print
    print "Enter name of service the password will be associated with."
    service = raw_input("[*]> ")
    existing_pass = [passwd for passwd in password_list if service in passwd]
    if existing_pass:
        print "[-] Password already created for this service!"
        print
    else:
        print "[+] Generating Password!"
        result = service + ":" + generate_password()
        password_list.append(result)
        print "[+] Password Generated: " + result
        print

def change_password(password_list):
    print
    print "Enter name of service associated with password."
    service = raw_input("[*]> ")
    passwd_to_be_changed = [passwd for passwd in password_list if service in passwd]
    if passwd_to_be_changed:
        password_list.remove(passwd_to_be_changed[0])
        print "[+] Generating Password!"
        result = service + ":" + generate_password()
        password_list.append(result)
        print "[+] Password Generated: " + result
        print
    else:
        print "[-] Service is not in the password list. Please try a different service!"
        print

def delete_password(password_list):
    print
    print "Enter name of service associated with password."
    service = raw_input("[*]> ")
    passwd_to_be_deleted = [passwd for passwd in password_list if service in passwd]
    if passwd_to_be_deleted:
        password_list.remove(passwd_to_be_deleted[0])
        print "[+] Password has been deleted!"
        print
    else:
        print "[-] Service is not in the password list. Please try a different service!"
        print


def list_passwords(password_list):
    print
    print "List of Passwords:"
    for i in range(1, len(password_list)):
        print password_list[i]
    print


def main():
    if not os.path.isfile('passwd_file'):
        AES_pass = new_user()
        passwd_list = decrypt_file(AES_pass[:32])
    else:
        print "Welcome to the Password Manager!"
        passwd = getpass.getpass()
        AES_pass = hashlib.sha256(passwd).hexdigest()
        passwd_list = decrypt_file(AES_pass[:32])

    if AES_pass != passwd_list[0]:
        print '[-] Wrong password!'
        sys.exit(0)

    while True:
        print "Options:"
        print "1) Add Password"
        print "2) List Password"
        print "3) Change Password"
        print "4) Delete Passwords"
        print "5) Exit"
        option = raw_input("[*]> ")

        if option == "1":
            add_password(passwd_list)
        elif option == "2":
            list_passwords(passwd_list)
        elif option == "3":
            change_password(passwd_list)
        elif option == "4":
            delete_password(passwd_list)
        elif option == "5":
            break
        else:
            print "[-] Wrong Option! Please try again."

    encrypt_file(AES_pass[:32], passwd_list)
    print "Remember to update your services with your new passwords!"

if __name__ == '__main__':
	main()
